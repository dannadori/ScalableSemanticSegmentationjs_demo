{"version":3,"sources":["const.ts","util.ts","resources.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["AIConfig","SPLIT_MARGIN","SPLIT_WIDTH","SPLIT_HEIGHT","TRANSFORMED_WIDTH","TRANSFORMED_HEIGHT","TRANSFORMED_MAX","CROP_MARGIN","SS_MODEL_PATH","SS_MODEL_PATHS","DisplayConstraints","QVGA","facingMode","width","exact","height","VGA","HD","FULLHD","FourK","ideal","max","EightK","DisplayConstraintOptions","captureVideoImageToCanvas","video","videoCaptureCanvas","document","createElement","videoWidth","videoHeight","getContext","drawImage","captureImageToCanvas","img","RS_TESTIMAGES","RS_TESTIMAGEMASKS","App","state","count","videoResolution","colnum","rownum","showRect","showSS","showGrid","initialized","testMode","testIndex","autoTest","autoTestIndex","autoTestIOU","parentRef","React","createRef","videoRef","imgCanvasRef","labelImgCanvasRef","controllerCanvasRef","controllerDivRef","workerSSMaskMonitorCanvasRef","statusCanvasRef","parentHeight","parentWidth","overlayWidth","overlayHeight","overlayXOffset","overlayYOffset","scalableSS","ScalableSemanticSegmentation","frameToCalc","frame","startTime","showFPS","elapsedTime","performance","now","fps","Math","ceil","messFps","showStatus","STATUS_FPS","modelPath","showCondition","messCond","STATUS_CONDITION","changeCameraResolution","resolution","current","srcObject","getTracks","map","s","stop","navigator","mediaDevices","getUserMedia","webCamPromise","audio","then","stream","console","log","Promise","resolve","reject","onloadedmetadata","all","res","checkParentSizeChanged","setState","catch","error","requestScanBarcode","a","controller","captureCanvas","remove","window","requestAnimationFrame","predict","STATUS_IOU","STATUS_IOU_SUM","kind","mess","offset_y","fontsize","ctx","font","textBaseline","textWidth","measureText","clearRect","fillStyle","fillRect","fillText","start","ious","length","requestScanBarcodeWithImage","imageIndex","tmpImage","src","onload","e","tmpCanvas","evaluate_masksize","maskBitmap","imgPromise","Image","onerror","maskCanvas","maskctx","maskImageData","getImageData","labelCanvas","labelctx","labelImageData","i","data","putImageData","tp","fp","fn","tn","val","iou","push","meanIOU","reduce","accum","newval","mess_sum","evaluate_orgsize","nonzero","nonzero2","model","this","addInitializedListener","props","addMaskPredictedListeners","init","initWorker","getBoundingClientRect","bottom","top","right","left","floor","findOverlayLocation","initWorkerPromise","constraintOptions","Object","keys","v","key","text","value","colnumOptions","rownumOptions","modelOptions","style","position","ref","autoPlay","playsInline","muted","display","Dropdown","options","simple","item","onChange","changeModel","Label","basic","size","color","onClick","newValue","previewCanvas","girdDrawCanvas","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.827f76d6.chunk.js","sourcesContent":["\nexport const AppStatus = {\n    INITIALIZING: \"initializing\",\n    INITIALIZED : \"initialized\",\n    RUNNING     : \"running\",\n}\n\nexport const AIConfig = {\n\n    SPLIT_MARGIN: 0.2,\n    SPLIT_WIDTH: 300,\n    SPLIT_HEIGHT: 300,\n    TRANSFORMED_WIDTH: 300,\n    TRANSFORMED_HEIGHT: 300,\n    TRANSFORMED_MAX: 300,\n    CROP_MARGIN: 20,\n\n    SS_MODEL_PATH: '/WEB_MODEL/icnet_0300x0300_0.10/model.json',\n    SS_MODEL_PATHS: [\n        '/WEB_MODEL/icnet_0300x0300_0.10/model.json',\n        '/WEB_MODEL/icnet_0300x0300_0.30/model.json',\n        '/WEB_MODEL/icnet_0300x0300_0.50/model.json',\n        '/WEB_MODEL/icnet_0300x0300_0.70/model.json',\n        '/WEB_MODEL/icnet_0300x0300_0.90/model.json',\n        '/WEB_MODEL/icnet_0300x0300_1.00/model.json',\n    ]\n}\n\n\nexport const WorkerCommand = {\n    SET_OVERLAY  :  'set_overlay',\n    SCAN_BARCODE : 'scan_barcode',\n    PREDICT_AREA : 'predict_area',\n    DRAW_MASK    : 'draw_mask',\n    SCAN_BARCODES: 'scan_barcodes',\n}\n\nexport const WorkerResponse = {\n    NOT_PREPARED     : 'not_prepared',\n    INITIALIZED      : 'initialized',\n    SCANED_BARCODE   : 'scaned_barcode',\n    PREDICTED_AREA   : 'predicted_area',\n    DREW_MASK        : 'drew_mask',\n    SCANNED_BARCODES : 'scanned_barcodes',\n}\n\n/////////////////////////////\n////// ディスプレイ設定  ////\n/////////////////////////////\n\n\nexport const qvgaConstraints:MediaTrackConstraintSet = {\n    facingMode: \"environment\",\n    width: { exact: 320 },\n    height: { exact: 240 }\n};\n\nexport const vgaConstraints:MediaTrackConstraintSet = {\n    facingMode: \"environment\",\n    width: { exact: 640 },\n    height: { exact: 480 }\n};\n\nexport const hdConstraints:MediaTrackConstraintSet = {\n    facingMode: \"environment\",\n    width: { exact: 1280 },\n    height: { exact: 720 }\n};\n\nexport const fullHdConstraints:MediaTrackConstraintSet = {\n    facingMode: \"environment\",\n    width: { exact: 1920 },\n    height: { exact: 1080 }\n};\n\nexport const fourKConstraints:MediaTrackConstraintSet = {\n    facingMode: \"environment\",\n    width: { ideal: 2500, max: 4096 },\n    height: { ideal: 1600, max: 4096 }\n};\n\nexport const eightKConstraints:MediaTrackConstraintSet = {\n    facingMode: \"environment\",\n    width: { ideal: 7680 },\n    height: { ideal: 4320 }\n};\n\n\nexport const DisplayConstraints = {\n    QVGA:   qvgaConstraints,\n    VGA:    vgaConstraints,\n    HD:     hdConstraints,\n    FULLHD: fullHdConstraints,\n    FourK:  fourKConstraints,\n    EightK: eightKConstraints,\n} as const\n\nexport const DisplayConstraintOptions:{[key:string]:MediaTrackConstraintSet} = {\n    \"VGA\"    : DisplayConstraints.VGA,\n    \"HD\"     : DisplayConstraints.HD,\n    \"FULLHD\" : DisplayConstraints.FULLHD\n}\n\nexport const DisplayConstraint   = DisplayConstraints.FULLHD\n//export const DisplayConstraint = DisplayConstraints.HD\n//export const DisplayConstraint = DisplayConstraints.VGA\n","interface OverlayLocation {\n    overlayWidth: number\n    overlayHeight: number\n    overlayXOffset: number\n    overlayYOffset: number\n}\n\nexport function findOverlayLocation(parentWidth:number, parentHeight:number, videoWidth: number, videoHeight: number): OverlayLocation {\n    const parentAspect = parentWidth / parentHeight\n    const videoAspect = videoWidth / videoHeight\n\n    let overlayHeight = 0\n    let overlayWidth = 0\n    let overlayXOffset = 0\n    let overlayYOffset = 0\n\n    if (parentAspect > videoAspect) {\n        //キャンバスのほうが横長　➔　キャンバスの縦で律速\n        // \n        overlayHeight = parentHeight\n        overlayYOffset = 0\n        overlayWidth = overlayHeight * (videoWidth / videoHeight)\n        overlayXOffset = (parentWidth - overlayWidth) / 2\n    } else {\n        //キャンバスのほうが縦長　➔　キャンバスの横で律速\n        overlayWidth = parentWidth\n        overlayXOffset = 0\n        overlayHeight = overlayWidth * (videoHeight / videoWidth)\n        overlayYOffset = (parentHeight - overlayHeight) / 2\n    }\n    overlayWidth   = Math.floor(overlayWidth)\n    overlayHeight  = Math.floor(overlayHeight)\n    overlayXOffset = Math.floor(overlayXOffset)\n    overlayYOffset = Math.floor(overlayYOffset)\n    //console.log('------------', overlayWidth, overlayHeight, overlayXOffset, overlayYOffset)\n    return {  overlayWidth, overlayHeight, overlayXOffset, overlayYOffset }\n\n}\n\nexport const captureVideoImageToCanvas = (video:HTMLVideoElement):HTMLCanvasElement => {\n    const videoCaptureCanvas    = document.createElement(\"canvas\");\n    videoCaptureCanvas.width = video.videoWidth\n    videoCaptureCanvas.height = video.videoHeight\n\n    const tmpCtx                = videoCaptureCanvas.getContext('2d')!\n    tmpCtx.drawImage(video, 0, 0, videoCaptureCanvas.width, videoCaptureCanvas.height);\n    return videoCaptureCanvas\n}\n\nexport const captureImageToCanvas = (img:HTMLImageElement):HTMLCanvasElement => {\n    const videoCaptureCanvas    = document.createElement(\"canvas\");\n    videoCaptureCanvas.width  = img.width\n    videoCaptureCanvas.height = img.height\n\n    const tmpCtx                = videoCaptureCanvas.getContext('2d')!\n    tmpCtx.drawImage(img, 0, 0, videoCaptureCanvas.width, videoCaptureCanvas.height);\n    return videoCaptureCanvas\n}\n\n","export const RS_TESTIMAGES = ['/resources/testImages/0033e2644a1321f8d6342d5106bc21f38e21746f.json.jpg', '/resources/testImages/00483f198527d7d6ebccba4140833832dcfe061d.json.jpg', '/resources/testImages/02f372109d86e514aa6737012a653ccd9a77478d.json.jpg', '/resources/testImages/02fad4b1f92ae4505b97a99d6c07660c472ab61f.json.jpg', '/resources/testImages/07a06e8af65157904033f91a5b4158981c3ede66.json.jpg', '/resources/testImages/095051e2e7eef590a1affcf31e9f7673f69b8368.json.jpg', '/resources/testImages/0a9e3e9952c50ca349d8b83f6787d560101b8fff.json.jpg', '/resources/testImages/0acb2188b2f4ca432a36fb98e16f9f6f8a950f15.json.jpg', '/resources/testImages/0ad80c8bcfd3c937dc95bb4ea3363ca2f3f011e1.json.jpg', '/resources/testImages/0aee33128f3e845c895ec0bd31e20ab1a07f7bfe.json.jpg', '/resources/testImages/0de60b1f25ec2faed974ffdbe13e5b5b6459a32e.json.jpg', '/resources/testImages/0f56498f73022dbd3eefd611305491d1904d4b93.json.jpg', '/resources/testImages/0fcc2cab3a01be9dd830560d573e221df2760c64.json.jpg', '/resources/testImages/115169170bd1808ecbc51eb568da105455e42418.json.jpg', '/resources/testImages/1558ecdb6ea45f2b2b0b630d4e84b2f7be95cfc2.json.jpg', '/resources/testImages/1643a0c4c81bc839c79380f56e520e4013ddeca5.json.jpg', '/resources/testImages/16764124edc600e32877a2317e0d3f4f755eadc7.json.jpg', '/resources/testImages/1750c7b629ecf0dd537fb590693521e83d4c9b45.json.jpg', '/resources/testImages/1aa907f42c7a5afa639f9ad388aa2e484f637453.json.jpg', '/resources/testImages/1dfc52fa8e448f774932c30c666ebb0d67c047dd.json.jpg', '/resources/testImages/203e3b2c49ca67f1290f3c1b5e232df545e2d21c.json.jpg', '/resources/testImages/21bf7b206fa048a9556a92c5f34d1b547edda5f2.json.jpg', '/resources/testImages/224f6ae289228268a0e47892977fbf05def33497.json.jpg', '/resources/testImages/226f33c2693115d470033a7c19505b9c1fe65dd1.json.jpg', '/resources/testImages/22e6dd6abc7697eebb8fc2337e9b54df0db077cc.json.jpg', '/resources/testImages/22e86144a50d2c93fc8e9d167e3f6fc55eb17633.json.jpg', '/resources/testImages/24618b633d215a27cfc14c98ec6ab9c94cec03a9.json.jpg', '/resources/testImages/252796192326010c2db8c5038a2160a7880d53e7.json.jpg', '/resources/testImages/259b69215600ae11bac3e7c3c5efb8732a085ee6.json.jpg', '/resources/testImages/25eab551f2419571655a5b0b861d74d917a275bc.json.jpg', '/resources/testImages/266e4f43990de072d752d948ffcd1415a1426186.json.jpg', '/resources/testImages/26d7dca6b835f411ad1c6624e496eefb7ac56466.json.jpg', '/resources/testImages/29e05a3459c6ef95a0cd9597b9c28f8e862ee697.json.jpg', '/resources/testImages/2a20851c7ced38cf90965acfa1737358cacfd8c0.json.jpg', '/resources/testImages/2fdb5489304bfdd0f5b17dd7e7a891c1d5416bfd.json.jpg', '/resources/testImages/30670a1249b315751d919dd94b3158de4d6cd283.json.jpg', '/resources/testImages/3125e80b2ce6b84449a04005004e2d3a99af71fd.json.jpg', '/resources/testImages/340da28fed7c43921dd9b4f85718fa7a40e7b6c9.json.jpg', '/resources/testImages/35622d144d57a98ae7f97b59793b20c161efd2b8.json.jpg', '/resources/testImages/366a87ba7e76e51399bb1ace1ebe0f408bb5284c.json.jpg', '/resources/testImages/38728b52840bf6d1d67aa541a15814238f5eed90.json.jpg', '/resources/testImages/397cbb0df1b8b131794d5788e3f3abc094ffbb7d.json.jpg', '/resources/testImages/398aba98207fb4676c2c8863cf861ea41ec20c41.json.jpg', '/resources/testImages/3cfc556e79ed61438e82704addcb85584ab41249.json.jpg', '/resources/testImages/3e690f21776b01e61ec9d46b0fdde4816013d156.json.jpg', '/resources/testImages/3fc23ece0fee92b90c38bac23c9d8d27e6e53807.json.jpg', '/resources/testImages/40477824c3f1520fa66d1e8a0243db04a6e310a0.json.jpg', '/resources/testImages/40ab05acf02d2c369894dcafbdd92ef943337ee6.json.jpg', '/resources/testImages/4335b08a42d7c36b911cb70b8b19c7445cb95381.json.jpg', '/resources/testImages/45401bf82b47ce3c4222e72f48079127ed856cb4.json.jpg', '/resources/testImages/457bfdf7d3ff9d3600310fb39c8effa603dd9881.json.jpg', '/resources/testImages/47ea45702ffa839fb0fcfc3966e024fc1ca7fd57.json.jpg', '/resources/testImages/480304285d3cabf86e35be253cb3a99a45ee785f.json.jpg', '/resources/testImages/49d6fb52998678b84d0ac20a21b0d684d3bd07bd.json.jpg', '/resources/testImages/4b938187d9612ea0ced31012fd11a99777ad6dda.json.jpg', '/resources/testImages/4ba51334134603f2d412cea9692e2cb06551aabb.json.jpg', '/resources/testImages/4c1a78fdcbbb121536ecffc6ceffaaf9493441c5.json.jpg', '/resources/testImages/4f63da8aa82db7dff78536742053b9f2fe908399.json.jpg', '/resources/testImages/4feb6aee5e43d859d7fb9ed5ba4d156bfd7a118e.json.jpg', '/resources/testImages/529f576df815b29eb70daf70f67d4f3bb32a1849.json.jpg', '/resources/testImages/588df6d5ef44d3830a4f5b9fb737aef7dde482fc.json.jpg', '/resources/testImages/59382fc229589bd743815d18998bd037810d3569.json.jpg', '/resources/testImages/5cbb10e58a0ba637ac97c38ac6c1999fee52ea98.json.jpg', '/resources/testImages/5ccf093500ede4566ad9eb129437915072b17ce5.json.jpg', '/resources/testImages/6150c9d7c12aea8906e52eb1890d22cac7cd742a.json.jpg', '/resources/testImages/633997846bbd5ddc43cad09b33a47d8406e27fe1.json.jpg', '/resources/testImages/63eed9b33fae66df7b7ec5697d686a5b1fac69a6.json.jpg', '/resources/testImages/692b5b5a264549f9e83333c3cdf0468a32bbb2d4.json.jpg', '/resources/testImages/6b18574f279a05100a2f7c927fb431743d256e93.json.jpg', '/resources/testImages/7338223f39b2d6c22a7d31d271457d26c8b876ca.json.jpg', '/resources/testImages/74fcf465a9ff02d7b11fb3a4af93e67735b8f64d.json.jpg', '/resources/testImages/77389ff4df90b2c983c69dbc8a4e30eb88d24f56.json.jpg', '/resources/testImages/7771d36bfced1e1abe7b12687b9759e13740223e.json.jpg', '/resources/testImages/79fde7fdeae615e1f6784b6f748e79f3ac583cfb.json.jpg', '/resources/testImages/7e29873b2b15b03d9c986b63e2c30509795655b1.json.jpg', '/resources/testImages/7f1176caafc81f8dba18cda7dc82f0ce8c18f6f1.json.jpg', '/resources/testImages/8165e06e3fbaec3cd5a2917abd87049bb89a5f74.json.jpg', '/resources/testImages/860ca252d98e065a3b473aad0b67792a05e5d83e.json.jpg', '/resources/testImages/8774be6e0fb5773302fac64f04b3b249d9b76b0d.json.jpg', '/resources/testImages/89f132153617345ccc8d42ed769b44fd9a49000f.json.jpg', '/resources/testImages/8b93aa4cc6d628cfb9effb7ebaf4d873eaf88057.json.jpg', '/resources/testImages/8cf58ff0cebab69b0bfe85b11983ce8e35255cd8.json.jpg', '/resources/testImages/8d10f9f51b27e396a7b3992120a4200f1f0f842a.json.jpg', '/resources/testImages/8f410f81ad98677d734cfb38ee01d89844938c6f.json.jpg', '/resources/testImages/92d53148485ad3cfcab0865bef1ff6fbb638947c.json.jpg', '/resources/testImages/95c35067604044a36bdc64426863280a2e3d76cf.json.jpg', '/resources/testImages/968607af4fdd70beb1bfdcc69d571b1d1490bba1.json.jpg', '/resources/testImages/9722798a981ead134eaddf3f82a9918168a525b9.json.jpg', '/resources/testImages/9af485df330466e122c032d1de19d89fdb7c0374.json.jpg', '/resources/testImages/9fc4584af0368567a345453acec06885214340f7.json.jpg', '/resources/testImages/a0ecb685cd5672ef4be925e54aa18761f5f62622.json.jpg', '/resources/testImages/a2759529e490ec46649a5a06f34b57664958c7d9.json.jpg', '/resources/testImages/a3423c522b642c3ac0afe979a7ac7e8e19d8344e.json.jpg', '/resources/testImages/aaf65f81f725a015a32d04b3212b8ead216fbb72.json.jpg', '/resources/testImages/ae270a68f86f57f3fb034b7a8858e0907b84120a.json.jpg', '/resources/testImages/af0ce47f0dc7de94af1155ee118b3f991b2e2638.json.jpg', '/resources/testImages/b1074fda6de0602851f62b9b82e7dc7fc4597de8.json.jpg', '/resources/testImages/b40509b3a03090bc7172398e56f6a02e047878b4.json.jpg', '/resources/testImages/b67b9436391f0c40d475486ca242d5700db38ba8.json.jpg', '/resources/testImages/b87444179c74818382832d21e498d569d5e8705f.json.jpg', '/resources/testImages/b9a9aadc90af955668b9c4f312ec1aafced31ce9.json.jpg', '/resources/testImages/ba024c98c7f16da4ff4b40dcdba399063f9ff478.json.jpg', '/resources/testImages/bcc4938dffe361d8da6dfad3e2a7099b0790f9ae.json.jpg', '/resources/testImages/bfa8404aaa1c1b68d7d6b8fb46a0496474815f33.json.jpg', '/resources/testImages/c113c3e6f4245f4b3c41ec84ebce63295eb8dc57.json.jpg', '/resources/testImages/c1589b694feee0dc0b2f1128979149b7da5e3c6e.json.jpg', '/resources/testImages/c1688e48a7c5757faa498016a9ad68d818926c39.json.jpg', '/resources/testImages/c2c1f8000d0f36638a581d8f59ef7285c08e1eae.json.jpg', '/resources/testImages/c334a8d67308b82a1acda510a54b8b8fd5608bc7.json.jpg', '/resources/testImages/c486206fde8580f87f00c3442b87076c912ac88f.json.jpg', '/resources/testImages/c59f1dfc5c57de8812a43aaac549cac1a2b37de2.json.jpg', '/resources/testImages/c624c11b61d1c94304384401e54f5b5121536bd4.json.jpg', '/resources/testImages/c68d64352109db77c5305c5f974f1f2d76a3cc65.json.jpg', '/resources/testImages/c9e1ba07601cb158fc0714824a3d0e1b0b633713.json.jpg', '/resources/testImages/cf5c47c09e7629c7e72bcbcf3efdde0ca4a40ce4.json.jpg', '/resources/testImages/cf9d9783a59efdd0512082c45208662ca4798329.json.jpg', '/resources/testImages/d0d4731a79791688529db4c1c5d9ad691d6e1925.json.jpg', '/resources/testImages/d2269bb4ba9b6eedc8945e461e94509cac441dcd.json.jpg', '/resources/testImages/d29ea7e8f28d8865085af1e5b7bf4495c51ef3d2.json.jpg', '/resources/testImages/d3c3657411e0db4890e15a4b4e3ee598eb824f07.json.jpg', '/resources/testImages/d52c4c20395ce59217fd2294f7f72b95c53246d0.json.jpg', '/resources/testImages/d917739e7078e3e563f379798d33fc9823b1d9a4.json.jpg', '/resources/testImages/d93dcc8d535740f7b954b706c41eb0532c35ad6a.json.jpg', '/resources/testImages/d94960dea5c4710cccc8bd39b2bdf930ee3e2c5a.json.jpg', '/resources/testImages/da8b2346899bc0bd9fd9a1bc566adbdce2ef6533.json.jpg', '/resources/testImages/db7242878adbbb12af019fadbf97853712a641cb.json.jpg', '/resources/testImages/de9e10c23fc244d367bec350410fbc261c29671d.json.jpg', '/resources/testImages/dfc6c050a267f507a112b8c7f00eb987b603e968.json.jpg', '/resources/testImages/e08b71407038eaaa8489ad159047411bd5dba1f3.json.jpg', '/resources/testImages/e565a44a729a3e82f60021712bb5564832409863.json.jpg', '/resources/testImages/e5a3cd80a19c28dfc78f578b2a0c06a8a1c52d00.json.jpg', '/resources/testImages/e5bdb8e2c09b388a25424e6b8c34f3e6bbc83ed3.json.jpg', '/resources/testImages/ebca4151ac8c30368bc6c7c0f5e4d05c968c024c.json.jpg', '/resources/testImages/ec2aa76b48dbb04f38df35bb51317b6d647d1978.json.jpg', '/resources/testImages/f26ff4119b5c5ab9cf80b73d52043857c2095e48.json.jpg', '/resources/testImages/f2bee345300d2602fb4a7a871a3621c28f3b1e59.json.jpg', '/resources/testImages/f703f372fe6062c56f44c009a1b5670f6253fecf.json.jpg', '/resources/testImages/f7211989a5b9ee0e4197e7683f5ef8de76a8de82.json.jpg', '/resources/testImages/f9075d8df2c74b86c240f2d5097c541f00f7ac64.json.jpg', '/resources/testImages/fb868ccf7a7a57baedbd452f6a1ab8efe4f26832.json.jpg'] \nexport const RS_TESTIMAGEMASKS = ['/resources/testImageMasks/0033e2644a1321f8d6342d5106bc21f38e21746f.json.png', '/resources/testImageMasks/00483f198527d7d6ebccba4140833832dcfe061d.json.png', '/resources/testImageMasks/02f372109d86e514aa6737012a653ccd9a77478d.json.png', '/resources/testImageMasks/02fad4b1f92ae4505b97a99d6c07660c472ab61f.json.png', '/resources/testImageMasks/07a06e8af65157904033f91a5b4158981c3ede66.json.png', '/resources/testImageMasks/095051e2e7eef590a1affcf31e9f7673f69b8368.json.png', '/resources/testImageMasks/0a9e3e9952c50ca349d8b83f6787d560101b8fff.json.png', '/resources/testImageMasks/0acb2188b2f4ca432a36fb98e16f9f6f8a950f15.json.png', '/resources/testImageMasks/0ad80c8bcfd3c937dc95bb4ea3363ca2f3f011e1.json.png', '/resources/testImageMasks/0aee33128f3e845c895ec0bd31e20ab1a07f7bfe.json.png', '/resources/testImageMasks/0de60b1f25ec2faed974ffdbe13e5b5b6459a32e.json.png', '/resources/testImageMasks/0f56498f73022dbd3eefd611305491d1904d4b93.json.png', '/resources/testImageMasks/0fcc2cab3a01be9dd830560d573e221df2760c64.json.png', '/resources/testImageMasks/115169170bd1808ecbc51eb568da105455e42418.json.png', '/resources/testImageMasks/1558ecdb6ea45f2b2b0b630d4e84b2f7be95cfc2.json.png', '/resources/testImageMasks/1643a0c4c81bc839c79380f56e520e4013ddeca5.json.png', '/resources/testImageMasks/16764124edc600e32877a2317e0d3f4f755eadc7.json.png', '/resources/testImageMasks/1750c7b629ecf0dd537fb590693521e83d4c9b45.json.png', '/resources/testImageMasks/1aa907f42c7a5afa639f9ad388aa2e484f637453.json.png', '/resources/testImageMasks/1dfc52fa8e448f774932c30c666ebb0d67c047dd.json.png', '/resources/testImageMasks/203e3b2c49ca67f1290f3c1b5e232df545e2d21c.json.png', '/resources/testImageMasks/21bf7b206fa048a9556a92c5f34d1b547edda5f2.json.png', '/resources/testImageMasks/224f6ae289228268a0e47892977fbf05def33497.json.png', '/resources/testImageMasks/226f33c2693115d470033a7c19505b9c1fe65dd1.json.png', '/resources/testImageMasks/22e6dd6abc7697eebb8fc2337e9b54df0db077cc.json.png', '/resources/testImageMasks/22e86144a50d2c93fc8e9d167e3f6fc55eb17633.json.png', '/resources/testImageMasks/24618b633d215a27cfc14c98ec6ab9c94cec03a9.json.png', '/resources/testImageMasks/252796192326010c2db8c5038a2160a7880d53e7.json.png', '/resources/testImageMasks/259b69215600ae11bac3e7c3c5efb8732a085ee6.json.png', '/resources/testImageMasks/25eab551f2419571655a5b0b861d74d917a275bc.json.png', '/resources/testImageMasks/266e4f43990de072d752d948ffcd1415a1426186.json.png', '/resources/testImageMasks/26d7dca6b835f411ad1c6624e496eefb7ac56466.json.png', '/resources/testImageMasks/29e05a3459c6ef95a0cd9597b9c28f8e862ee697.json.png', '/resources/testImageMasks/2a20851c7ced38cf90965acfa1737358cacfd8c0.json.png', '/resources/testImageMasks/2fdb5489304bfdd0f5b17dd7e7a891c1d5416bfd.json.png', '/resources/testImageMasks/30670a1249b315751d919dd94b3158de4d6cd283.json.png', '/resources/testImageMasks/3125e80b2ce6b84449a04005004e2d3a99af71fd.json.png', '/resources/testImageMasks/340da28fed7c43921dd9b4f85718fa7a40e7b6c9.json.png', '/resources/testImageMasks/35622d144d57a98ae7f97b59793b20c161efd2b8.json.png', '/resources/testImageMasks/366a87ba7e76e51399bb1ace1ebe0f408bb5284c.json.png', '/resources/testImageMasks/38728b52840bf6d1d67aa541a15814238f5eed90.json.png', '/resources/testImageMasks/397cbb0df1b8b131794d5788e3f3abc094ffbb7d.json.png', '/resources/testImageMasks/398aba98207fb4676c2c8863cf861ea41ec20c41.json.png', '/resources/testImageMasks/3cfc556e79ed61438e82704addcb85584ab41249.json.png', '/resources/testImageMasks/3e690f21776b01e61ec9d46b0fdde4816013d156.json.png', '/resources/testImageMasks/3fc23ece0fee92b90c38bac23c9d8d27e6e53807.json.png', '/resources/testImageMasks/40477824c3f1520fa66d1e8a0243db04a6e310a0.json.png', '/resources/testImageMasks/40ab05acf02d2c369894dcafbdd92ef943337ee6.json.png', '/resources/testImageMasks/4335b08a42d7c36b911cb70b8b19c7445cb95381.json.png', '/resources/testImageMasks/45401bf82b47ce3c4222e72f48079127ed856cb4.json.png', '/resources/testImageMasks/457bfdf7d3ff9d3600310fb39c8effa603dd9881.json.png', '/resources/testImageMasks/47ea45702ffa839fb0fcfc3966e024fc1ca7fd57.json.png', '/resources/testImageMasks/480304285d3cabf86e35be253cb3a99a45ee785f.json.png', '/resources/testImageMasks/49d6fb52998678b84d0ac20a21b0d684d3bd07bd.json.png', '/resources/testImageMasks/4b938187d9612ea0ced31012fd11a99777ad6dda.json.png', '/resources/testImageMasks/4ba51334134603f2d412cea9692e2cb06551aabb.json.png', '/resources/testImageMasks/4c1a78fdcbbb121536ecffc6ceffaaf9493441c5.json.png', '/resources/testImageMasks/4f63da8aa82db7dff78536742053b9f2fe908399.json.png', '/resources/testImageMasks/4feb6aee5e43d859d7fb9ed5ba4d156bfd7a118e.json.png', '/resources/testImageMasks/529f576df815b29eb70daf70f67d4f3bb32a1849.json.png', '/resources/testImageMasks/588df6d5ef44d3830a4f5b9fb737aef7dde482fc.json.png', '/resources/testImageMasks/59382fc229589bd743815d18998bd037810d3569.json.png', '/resources/testImageMasks/5cbb10e58a0ba637ac97c38ac6c1999fee52ea98.json.png', '/resources/testImageMasks/5ccf093500ede4566ad9eb129437915072b17ce5.json.png', '/resources/testImageMasks/6150c9d7c12aea8906e52eb1890d22cac7cd742a.json.png', '/resources/testImageMasks/633997846bbd5ddc43cad09b33a47d8406e27fe1.json.png', '/resources/testImageMasks/63eed9b33fae66df7b7ec5697d686a5b1fac69a6.json.png', '/resources/testImageMasks/692b5b5a264549f9e83333c3cdf0468a32bbb2d4.json.png', '/resources/testImageMasks/6b18574f279a05100a2f7c927fb431743d256e93.json.png', '/resources/testImageMasks/7338223f39b2d6c22a7d31d271457d26c8b876ca.json.png', '/resources/testImageMasks/74fcf465a9ff02d7b11fb3a4af93e67735b8f64d.json.png', '/resources/testImageMasks/77389ff4df90b2c983c69dbc8a4e30eb88d24f56.json.png', '/resources/testImageMasks/7771d36bfced1e1abe7b12687b9759e13740223e.json.png', '/resources/testImageMasks/79fde7fdeae615e1f6784b6f748e79f3ac583cfb.json.png', '/resources/testImageMasks/7e29873b2b15b03d9c986b63e2c30509795655b1.json.png', '/resources/testImageMasks/7f1176caafc81f8dba18cda7dc82f0ce8c18f6f1.json.png', '/resources/testImageMasks/8165e06e3fbaec3cd5a2917abd87049bb89a5f74.json.png', '/resources/testImageMasks/860ca252d98e065a3b473aad0b67792a05e5d83e.json.png', '/resources/testImageMasks/8774be6e0fb5773302fac64f04b3b249d9b76b0d.json.png', '/resources/testImageMasks/89f132153617345ccc8d42ed769b44fd9a49000f.json.png', '/resources/testImageMasks/8b93aa4cc6d628cfb9effb7ebaf4d873eaf88057.json.png', '/resources/testImageMasks/8cf58ff0cebab69b0bfe85b11983ce8e35255cd8.json.png', '/resources/testImageMasks/8d10f9f51b27e396a7b3992120a4200f1f0f842a.json.png', '/resources/testImageMasks/8f410f81ad98677d734cfb38ee01d89844938c6f.json.png', '/resources/testImageMasks/92d53148485ad3cfcab0865bef1ff6fbb638947c.json.png', '/resources/testImageMasks/95c35067604044a36bdc64426863280a2e3d76cf.json.png', '/resources/testImageMasks/968607af4fdd70beb1bfdcc69d571b1d1490bba1.json.png', '/resources/testImageMasks/9722798a981ead134eaddf3f82a9918168a525b9.json.png', '/resources/testImageMasks/9af485df330466e122c032d1de19d89fdb7c0374.json.png', '/resources/testImageMasks/9fc4584af0368567a345453acec06885214340f7.json.png', '/resources/testImageMasks/a0ecb685cd5672ef4be925e54aa18761f5f62622.json.png', '/resources/testImageMasks/a2759529e490ec46649a5a06f34b57664958c7d9.json.png', '/resources/testImageMasks/a3423c522b642c3ac0afe979a7ac7e8e19d8344e.json.png', '/resources/testImageMasks/aaf65f81f725a015a32d04b3212b8ead216fbb72.json.png', '/resources/testImageMasks/ae270a68f86f57f3fb034b7a8858e0907b84120a.json.png', '/resources/testImageMasks/af0ce47f0dc7de94af1155ee118b3f991b2e2638.json.png', '/resources/testImageMasks/b1074fda6de0602851f62b9b82e7dc7fc4597de8.json.png', '/resources/testImageMasks/b40509b3a03090bc7172398e56f6a02e047878b4.json.png', '/resources/testImageMasks/b67b9436391f0c40d475486ca242d5700db38ba8.json.png', '/resources/testImageMasks/b87444179c74818382832d21e498d569d5e8705f.json.png', '/resources/testImageMasks/b9a9aadc90af955668b9c4f312ec1aafced31ce9.json.png', '/resources/testImageMasks/ba024c98c7f16da4ff4b40dcdba399063f9ff478.json.png', '/resources/testImageMasks/bcc4938dffe361d8da6dfad3e2a7099b0790f9ae.json.png', '/resources/testImageMasks/bfa8404aaa1c1b68d7d6b8fb46a0496474815f33.json.png', '/resources/testImageMasks/c113c3e6f4245f4b3c41ec84ebce63295eb8dc57.json.png', '/resources/testImageMasks/c1589b694feee0dc0b2f1128979149b7da5e3c6e.json.png', '/resources/testImageMasks/c1688e48a7c5757faa498016a9ad68d818926c39.json.png', '/resources/testImageMasks/c2c1f8000d0f36638a581d8f59ef7285c08e1eae.json.png', '/resources/testImageMasks/c334a8d67308b82a1acda510a54b8b8fd5608bc7.json.png', '/resources/testImageMasks/c486206fde8580f87f00c3442b87076c912ac88f.json.png', '/resources/testImageMasks/c59f1dfc5c57de8812a43aaac549cac1a2b37de2.json.png', '/resources/testImageMasks/c624c11b61d1c94304384401e54f5b5121536bd4.json.png', '/resources/testImageMasks/c68d64352109db77c5305c5f974f1f2d76a3cc65.json.png', '/resources/testImageMasks/c9e1ba07601cb158fc0714824a3d0e1b0b633713.json.png', '/resources/testImageMasks/cf5c47c09e7629c7e72bcbcf3efdde0ca4a40ce4.json.png', '/resources/testImageMasks/cf9d9783a59efdd0512082c45208662ca4798329.json.png', '/resources/testImageMasks/d0d4731a79791688529db4c1c5d9ad691d6e1925.json.png', '/resources/testImageMasks/d2269bb4ba9b6eedc8945e461e94509cac441dcd.json.png', '/resources/testImageMasks/d29ea7e8f28d8865085af1e5b7bf4495c51ef3d2.json.png', '/resources/testImageMasks/d3c3657411e0db4890e15a4b4e3ee598eb824f07.json.png', '/resources/testImageMasks/d52c4c20395ce59217fd2294f7f72b95c53246d0.json.png', '/resources/testImageMasks/d917739e7078e3e563f379798d33fc9823b1d9a4.json.png', '/resources/testImageMasks/d93dcc8d535740f7b954b706c41eb0532c35ad6a.json.png', '/resources/testImageMasks/d94960dea5c4710cccc8bd39b2bdf930ee3e2c5a.json.png', '/resources/testImageMasks/da8b2346899bc0bd9fd9a1bc566adbdce2ef6533.json.png', '/resources/testImageMasks/db7242878adbbb12af019fadbf97853712a641cb.json.png', '/resources/testImageMasks/de9e10c23fc244d367bec350410fbc261c29671d.json.png', '/resources/testImageMasks/dfc6c050a267f507a112b8c7f00eb987b603e968.json.png', '/resources/testImageMasks/e08b71407038eaaa8489ad159047411bd5dba1f3.json.png', '/resources/testImageMasks/e565a44a729a3e82f60021712bb5564832409863.json.png', '/resources/testImageMasks/e5a3cd80a19c28dfc78f578b2a0c06a8a1c52d00.json.png', '/resources/testImageMasks/e5bdb8e2c09b388a25424e6b8c34f3e6bbc83ed3.json.png', '/resources/testImageMasks/ebca4151ac8c30368bc6c7c0f5e4d05c968c024c.json.png', '/resources/testImageMasks/ec2aa76b48dbb04f38df35bb51317b6d647d1978.json.png', '/resources/testImageMasks/f26ff4119b5c5ab9cf80b73d52043857c2095e48.json.png', '/resources/testImageMasks/f2bee345300d2602fb4a7a871a3621c28f3b1e59.json.png', '/resources/testImageMasks/f703f372fe6062c56f44c009a1b5670f6253fecf.json.png', '/resources/testImageMasks/f7211989a5b9ee0e4197e7683f5ef8de76a8de82.json.png', '/resources/testImageMasks/f9075d8df2c74b86c240f2d5097c541f00f7ac64.json.png', '/resources/testImageMasks/fb868ccf7a7a57baedbd452f6a1ab8efe4f26832.json.png'] \n","import React from 'react';\nimport './App.css';\nimport { Dropdown, Label } from 'semantic-ui-react'\nimport { DisplayConstraintOptions, AIConfig } from './const';\nimport { findOverlayLocation, captureVideoImageToCanvas, captureImageToCanvas } from './util';\nimport { ScalableSemanticSegmentation } from 'scalable-semantic-segmentation-js'\nimport { RS_TESTIMAGES, RS_TESTIMAGEMASKS } from './resources';\n\ninterface AppState {\n    count: number,\n    videoResolution: string,\n    colnum: number,\n    rownum: number,\n    showRect: boolean,\n    showSS: boolean,\n    showGrid: boolean,\n    initialized: boolean,\n\n    testMode: boolean,\n    testIndex: number,\n    autoTest: boolean,\n    autoTestIndex:number\n    autoTestIOU: number[]\n}\n\nclass App extends React.Component {\n    state: AppState = {\n        count: 0,\n        videoResolution: \"VGA\",\n        colnum: 1,\n        rownum: 1,\n        showRect: true,\n        showSS: false,\n        showGrid: false,\n        initialized: false,\n\n        testMode: false,\n        testIndex: 0,\n        autoTest: false,\n        autoTestIndex:0,\n        autoTestIOU:[],\n    }\n\n    ////////////////////\n    // HTML Component //\n    ////////////////////\n    parentRef = React.createRef<HTMLDivElement>()\n    videoRef = React.createRef<HTMLVideoElement>()\n    imgCanvasRef = React.createRef<HTMLCanvasElement>()\n    labelImgCanvasRef = React.createRef<HTMLCanvasElement>()\n    controllerCanvasRef = React.createRef<HTMLCanvasElement>()\n    controllerDivRef = React.createRef<HTMLDivElement>()\n    workerSSMaskMonitorCanvasRef = React.createRef<HTMLCanvasElement>()\n    statusCanvasRef = React.createRef<HTMLCanvasElement>()\n    ////////////////////\n    // Component Size //\n    ////////////////////\n    videoHeight = 0\n    videoWidth = 0\n    parentHeight = 0\n    parentWidth = 0\n\n    overlayWidth = 0\n    overlayHeight = 0\n    overlayXOffset = 0\n    overlayYOffset = 0\n\n    scalableSS: ScalableSemanticSegmentation = new ScalableSemanticSegmentation()\n\n\n    frameToCalc = 10\n    frame = 0\n    startTime = 0\n    showFPS = () =>{\n        this.frame += 1\n        if(this.frame >= this.frameToCalc){\n            const elapsedTime = (performance.now() - this.startTime) / 1000\n            const fps = Math.ceil((this.frameToCalc / elapsedTime) * 10) / 10\n            const messFps = `FPS: ${fps}`\n            this.showStatus(this.STATUS_FPS, messFps)\n            this.frame = 0\n            this.startTime = performance.now()\n        }\n    }\n    modelPath = \"\"\n    showCondition = () => {\n        const messCond = `${this.state.videoResolution}, ${this.state.colnum}, ${this.state.rownum}, ${this.modelPath}`\n        this.showStatus(this.STATUS_CONDITION, messCond)\n    }\n    /**\n     * ワーカーの初期化\n     */\n    async initWorker(model:string) {\n        // SemanticSegmentation 用ワーカー\n        this.scalableSS.addInitializedListener(() => {\n            const props = this.props as any\n            this.setState({ initialized: true })\n            this.requestScanBarcode()\n        })\n        this.scalableSS.addMaskPredictedListeners((maskBitmap: ImageBitmap) => {\n//            console.log(model, this.modelPath)\n\n            if (this.statusCanvasRef.current!.width !== this.parentWidth){\n                this.statusCanvasRef.current!.width = this.parentWidth\n                this.statusCanvasRef.current!.height = this.parentHeight\n            }\n            \n    \n            this.showCondition()\n            // 再キャプチャ\n            if (this.state.testMode === false) { // normal mode の場合はループ\n                this.showFPS()\n                this.requestScanBarcode()\n            } else { // test mode\n                if(this.state.autoTest === false){\n                    this.evaluate_masksize(maskBitmap, this.state.testIndex)\n                }else{\n                    this.evaluate_masksize(maskBitmap, this.state.autoTestIndex).then((iou:number)=>{\n                        if(this.state.autoTest===true){\n                            this.autoTest(false)\n                        }\n                    })\n                }\n            }\n        })\n        this.scalableSS.init(model, AIConfig.SPLIT_WIDTH, AIConfig.SPLIT_HEIGHT, AIConfig.SPLIT_MARGIN)\n        this.modelPath = model\n        return\n    }\n\n    async changeModel(model:string){\n        this.scalableSS = new ScalableSemanticSegmentation()\n        this.initWorker(model)\n    }    \n\n    /**\n     * HTMLコンポーネントに位置計算\n     */\n    private checkParentSizeChanged(video: HTMLVideoElement) {\n        // サイズ算出\n        this.videoHeight = video.videoHeight\n        this.videoWidth = video.videoWidth\n\n        let parentHeight = video.getBoundingClientRect().bottom - video.getBoundingClientRect().top\n        const parentWidth = video.getBoundingClientRect().right - video.getBoundingClientRect().left\n\n        parentHeight = (parentWidth / this.videoWidth) * this.videoHeight\n\n        this.parentHeight = parentHeight\n        this.parentWidth = parentWidth\n        const { overlayWidth, overlayHeight, overlayXOffset, overlayYOffset } = findOverlayLocation(this.parentWidth, this.parentHeight, this.videoWidth, this.videoHeight)\n        this.overlayWidth = overlayWidth\n        this.overlayHeight = overlayHeight\n        this.overlayXOffset = overlayXOffset\n        this.overlayYOffset = overlayYOffset\n\n\n        this.workerSSMaskMonitorCanvasRef.current!.width = this.overlayWidth\n        this.workerSSMaskMonitorCanvasRef.current!.height = this.overlayHeight\n        this.controllerCanvasRef.current!.width = this.overlayWidth\n        this.controllerCanvasRef.current!.height = this.overlayHeight\n\n    }\n\n    /**\n     * マウント時の処理\n     * モデルのロード、カメラの準備ができたらイベント発行する\n     */\n    componentDidMount() {\n        console.log('Initializing')\n\n        const initWorkerPromise = this.initWorker(AIConfig.SS_MODEL_PATH)\n\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            const webCamPromise = navigator.mediaDevices\n                .getUserMedia({\n                    audio: false,\n                    video: DisplayConstraintOptions[this.state.videoResolution]\n                })\n                .then(stream => {\n                    console.log(this.videoRef)\n                    this.videoRef.current!.srcObject = stream;\n                    return new Promise((resolve, reject) => {\n                        this.videoRef.current!.onloadedmetadata = () => {\n                            resolve();\n                        };\n                    });\n                });\n\n            Promise.all([initWorkerPromise, webCamPromise])\n                .then((res) => {\n                    console.log('Camera and model ready!')\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        }\n    }\n\n    changeCameraResolution = (resolution: string) => {\n        (this.videoRef.current!.srcObject as MediaStream).getTracks().map(s => s.stop())\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            const webCamPromise = navigator.mediaDevices\n                .getUserMedia({\n                    audio: false,\n                    video: DisplayConstraintOptions[resolution]\n                })\n                .then(stream => {\n                    console.log(this.videoRef)\n                    this.videoRef.current!.srcObject = stream;\n                    return new Promise((resolve, reject) => {\n                        this.videoRef.current!.onloadedmetadata = () => {\n                            resolve();\n                        };\n                    });\n                });\n\n            Promise.all([webCamPromise])\n                .then((res) => {\n                    console.log('Camera and model ready!')\n                    const video = this.videoRef.current!\n                    this.checkParentSizeChanged(video)\n                    this.setState({ videoResolution: resolution })\n                })\n                .catch(error => {\n                    console.error(error);\n                });\n        }\n    }\n\n\n    requestScanBarcode = async () => {\n        console.log('requestScanBarcode')\n        const video = this.videoRef.current!\n        const controller = this.controllerCanvasRef.current!\n        controller.width = this.overlayWidth\n        controller.height = this.overlayHeight\n\n        const captureCanvas = captureVideoImageToCanvas(video)\n        if (captureCanvas.width === 0) {\n            captureCanvas.remove()\n            window.requestAnimationFrame(this.requestScanBarcode);\n            return\n        }\n        this.scalableSS.predict(captureCanvas, this.state.colnum, this.state.rownum)\n        captureCanvas.remove()\n    }\n\n    STATUS_FPS       = 1\n    STATUS_CONDITION = 2\n    STATUS_IOU       = 3\n    STATUS_IOU_SUM   = 4\n\n    showStatus = (kind:number, mess:string)=>{\n\n        const offset_y_base = 50\n        const offset_x_base = 10\n        const fontsize = 32\n        const lineHeight = fontsize+5\n        const offset_x = offset_x_base\n        const offset_y = offset_y_base + lineHeight * kind\n\n        const ctx= this.statusCanvasRef.current!.getContext(\"2d\")!\n        ctx.font         = \"32px sans-serif\"\n        ctx.textBaseline = \"top\";\n        const metrics = ctx.measureText(mess);\n        const textWidth = metrics.width+3\n\n        ctx.clearRect(offset_x, offset_y, textWidth, lineHeight)\n        ctx.fillStyle = \"#22222277\";\n        ctx.fillRect(offset_x, offset_y, textWidth, lineHeight)\n        ctx.fillStyle = \"#DD3333cc\";\n        ctx.fillText(mess, offset_x, offset_y)\n    }\n\n\n    autoTest = async (start:boolean) =>{\n        const autoTestIndex = start ? 0: this.state.autoTestIndex+1 // at fist test, initialize\n        const ious = start? []:this.state.autoTestIOU             // at fist test, initialize\n\n        if (autoTestIndex >= RS_TESTIMAGES.length){\n            console.log(\"fin\")\n            console.log(ious)\n            this.setState({autoTest:false})\n            return\n        }\n\n        await this.requestScanBarcodeWithImage(autoTestIndex)\n        this.setState({autoTestIndex:autoTestIndex, autoTestIOU:ious})\n    }\n\n    requestScanBarcodeWithImage = async (imageIndex: number) => {\n        const tmpImage = document.createElement(\"img\")\n        tmpImage.src = RS_TESTIMAGES[imageIndex]\n        tmpImage.onload = (e) => {\n            this.imgCanvasRef.current!.width=tmpImage.width\n            this.imgCanvasRef.current!.height=tmpImage.height\n            const ctx = this.imgCanvasRef.current!.getContext(\"2d\")!\n            ctx.drawImage(tmpImage, 0, 0, this.imgCanvasRef.current!.width, this.imgCanvasRef.current!.height)\n            const tmpCanvas = captureImageToCanvas(tmpImage)\n            this.scalableSS.predict(tmpCanvas, this.state.colnum, this.state.rownum)\n            tmpCanvas.remove()\n            tmpImage.remove()\n        }\n    }\n\n    evaluate_masksize = async (maskBitmap:ImageBitmap, testIndex:number):Promise<number> => {\n        const imgPromise = new Promise((resolve, reject) => {\n            const img = new Image()\n            img.onload  = ()  => {resolve(img)}\n            img.onerror = (e) => {reject(e)}\n            img.src = RS_TESTIMAGEMASKS[testIndex]\n        })\n\n        const img = await Promise.resolve(imgPromise) as HTMLImageElement\n\n        // マスク結果のImageDataを取得\n        const maskCanvas = document.createElement(\"canvas\")\n        maskCanvas.width = maskBitmap.width\n        maskCanvas.height = maskBitmap.height\n        const maskctx = maskCanvas.getContext(\"2d\")!\n        maskctx.drawImage(maskBitmap, 0, 0, maskBitmap.width, maskBitmap.height)\n        const maskImageData = maskctx.getImageData(0, 0, maskBitmap.width, maskBitmap.height)\n        // ラベルのImageData\n        const labelCanvas = document.createElement(\"canvas\")\n        labelCanvas.width = maskBitmap.width\n        labelCanvas.height = maskBitmap.height\n        const labelctx = labelCanvas.getContext(\"2d\")!\n        labelctx.drawImage(img, 0, 0, maskBitmap.width, maskBitmap.height)\n        const labelImageData = labelctx.getImageData(0, 0, maskBitmap.width, maskBitmap.height)        \n\n        for(let i=0; i < labelImageData.data.length; i+=4){\n            if(labelImageData.data[i] === 1){\n                labelImageData.data[i+1]=255\n            }\n            labelImageData.data[i+3]=128\n        }\n        const tmpCanvas=document.createElement(\"canvas\")\n        tmpCanvas.width=labelImageData.width\n        tmpCanvas.height=labelImageData.height\n        tmpCanvas.getContext(\"2d\")!.putImageData(labelImageData,0,0)\n        this.labelImgCanvasRef.current!.getContext(\"2d\")!.clearRect(0, 0, this.labelImgCanvasRef.current!.width, this.labelImgCanvasRef.current!.height)\n        this.labelImgCanvasRef.current!.getContext(\"2d\")!.drawImage(tmpCanvas, 0, 0, this.labelImgCanvasRef.current!.width, this.labelImgCanvasRef.current!.height)\n\n        img.remove()\n        maskCanvas.remove()\n        labelCanvas.remove()\n        tmpCanvas.remove()\n        \n        // console.log(labelImageData, maskImageData)\n        let tp = 0\n        let fp = 0\n        let fn = 0\n        let tn = 0\n        for(let i=0; i < maskImageData.data.length; i+=4){\n            const val = maskImageData.data[i]+labelImageData.data[i]\n            switch(val){\n                case 0:\n                    tn+=1 // TrueNegative\n                    break\n                case 1:\n                    fn+=1 // FalseNegative\n                    break\n                case 255:\n                    fp+=1 // FalsePositive\n                    break\n                case 256:\n                    tp+=1 // TruePositive\n                    break\n                default:\n                    console.log(\"invalid value:\"+val)\n            }\n        }\n        const iou = Math.ceil( tp/(tp+fp+fn) * 10000) / 100\n        const mess = `TP:${tp}, FP:${fp}, FN:${fn}, TN:${tn}, IOU=${iou}`\n        const ious = this.state.autoTestIOU\n        ious.push(iou)\n        const meanIOU = Math.ceil((ious.reduce((accum, newval)=>{return accum+newval}) / ious.length) * 100) /100\n        const mess_sum = `mIOU:${meanIOU}, NUM:${ious.length}`\n\n        console.log(mess)\n        this.showStatus(this.STATUS_IOU, mess)\n        this.showStatus(this.STATUS_IOU_SUM, mess_sum)\n\n        //this.setState({autoTestIOU:ious})\n\n        return iou\n    }\n\n\n\n\n\n    evaluate_orgsize = async (maskBitmap:ImageBitmap) =>{\n        const tmpImage = document.createElement(\"img\")\n        tmpImage.src = RS_TESTIMAGEMASKS[this.state.testIndex]\n        tmpImage.onload = (e) =>{\n\n            // マスク結果のImageDataを取得\n            const maskCanvas = document.createElement(\"canvas\")\n            maskCanvas.width = tmpImage.width\n            maskCanvas.height = tmpImage.height\n            const maskctx = maskCanvas.getContext(\"2d\")!\n            maskctx.drawImage(maskBitmap, 0, 0, tmpImage.width, tmpImage.height)\n            const maskImageData = maskctx.getImageData(0, 0, tmpImage.width, tmpImage.height)\n            \n\n            // ラベルのImageData\n            const labelCanvas = document.createElement(\"canvas\")\n            labelCanvas.width = tmpImage.width\n            labelCanvas.height = tmpImage.height\n            const labelctx = labelCanvas.getContext(\"2d\")!\n            labelctx.drawImage(tmpImage, 0, 0, tmpImage.width, tmpImage.height)\n            const labelImageData = labelctx.getImageData(0, 0, tmpImage.width, tmpImage.height)\n\n            tmpImage.remove()\n            maskCanvas.remove()\n            labelCanvas.remove()\n\n            console.log(labelImageData, maskImageData)\n            const nonzero=[]\n            for(let i=0; i < maskImageData.data.length; i+=4){\n                if(maskImageData.data[i]!==0){\n                    nonzero.push(maskImageData.data[i])\n                }\n            }\n            console.log(\"mask\")\n            console.log(nonzero.length)\n            console.log(nonzero)\n\n            const nonzero2=[]\n            for(let i=0; i < labelImageData.data.length; i+=4){\n                if(labelImageData.data[i]!==0){\n                    nonzero2.push([labelImageData.data[i],i])\n                }\n            }\n            console.log(\"label\")\n            console.log(nonzero2.length)\n            console.log(nonzero2)\n        }\n    }\n\n\n    render() {\n        const video = this.videoRef.current!\n\n        if (this.state.initialized === true) {\n            console.log('initialized')\n            this.checkParentSizeChanged(video)\n        }\n\n        const constraints = Object.keys(DisplayConstraintOptions)\n        const constraintOptions = constraints.map(v => {\n            return { key: v, text: v, value: v }\n        })\n\n        const colnumOptionList = [1, 2, 3]\n        const colnumOptions = colnumOptionList.map(v => {\n            return { key: v, text: v, value: v }\n        })\n        const rownumOptionList = [1, 2, 3]\n        const rownumOptions = rownumOptionList.map(v => {\n            return { key: v, text: v, value: v }\n        })\n\n        const modelOptions = AIConfig.SS_MODEL_PATHS.map(v =>{\n            return { key: v, text: v, value: v }\n        })\n\n        return (\n            <div style={{ width: \"100%\", height: this.parentHeight, position: \"relative\", top: 0, left: 0, }} ref={this.parentRef} >\n                <video\n                    autoPlay\n                    playsInline\n                    muted\n                    ref={this.videoRef}\n                    //style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width:this.overlayWidth, height:this.overlayHeight}}\n\n                    style={{ width: \"100%\", height: \"100%\", position: \"absolute\", top: 0, left: 0, }}\n                />\n                <canvas\n                    ref={this.imgCanvasRef}\n                    style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width: this.parentWidth, height: this.parentHeight, display: \"none\" }}\n                />\n                <canvas\n                    ref={this.labelImgCanvasRef}\n                    style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width: this.parentWidth, height: this.parentHeight, display: \"none\" }}\n                />\n\n\n                <canvas\n                    ref={this.workerSSMaskMonitorCanvasRef}\n                    style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width: this.parentWidth, height: this.parentHeight }}\n                />\n                <canvas\n                    ref={this.controllerCanvasRef}\n                    style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width: this.parentWidth, height: this.parentHeight }}\n                />\n                <canvas\n                    ref={this.statusCanvasRef}\n                    style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width: this.parentWidth, height: this.parentHeight }}\n                />\n\n                <div\n                    ref={this.controllerDivRef}\n                    style={{ position: \"absolute\", top: this.overlayYOffset, left: this.overlayXOffset, width: this.parentWidth, height: this.parentHeight }}\n                >\n                    <Dropdown text='Resolution' options={constraintOptions} simple item onChange={(e, { value }) => {\n                        this.changeCameraResolution(value as string)\n                    }} />\n                    <Dropdown text='col' options={colnumOptions} simple item onChange={(e, { value }) => {\n                        this.setState({ colnum: value as number })\n                    }} />\n                    <Dropdown text='row' options={rownumOptions} simple item onChange={(e, { value }) => {\n                        this.setState({ rownum: value as number })\n                    }} />\n                    <Dropdown text='row' options={modelOptions} simple item onChange={(e, { value }) => {\n                        this.modelPath = value as string\n                        this.changeModel(value as string )\n                    }} />\n                    <Label basic size=\"tiny\" color={this.state.showSS ? \"red\" : \"grey\"} onClick={() => {\n                        const newValue = !this.state.showSS\n                        this.scalableSS.previewCanvas = newValue ? this.workerSSMaskMonitorCanvasRef.current! : null\n                        this.setState({ showSS: newValue })\n                    }}>ss</Label>\n                    <Label basic size=\"tiny\" color={this.state.showGrid ? \"red\" : \"grey\"} onClick={() => {\n                        const newValue = !this.state.showGrid\n                        this.scalableSS.girdDrawCanvas = newValue ? this.controllerCanvasRef.current! : null\n                        this.setState({ showGrid: newValue })\n                    }}>grid</Label>\n\n                    <Label basic size=\"tiny\" color={this.state.testMode ? \"red\" : \"grey\"} onClick={() => {\n                        const newValue = !this.state.testMode\n                        this.setState({ testMode: newValue })\n                        if (newValue === false) {//normal mode\n                            this.requestScanBarcode()\n                            this.imgCanvasRef.current!.style.display = \"none\"\n                            this.labelImgCanvasRef.current!.style.display = \"none\"\n                        } else {\n                            this.imgCanvasRef.current!.style.display = \"block\"\n                            this.labelImgCanvasRef.current!.style.display = \"block\"\n                            this.requestScanBarcodeWithImage(this.state.testIndex)\n                        }\n\n\n                    }}>test({this.state.testIndex})</Label>\n\n                    <Label basic size=\"tiny\" color={this.state.testMode ? \"red\" : \"grey\"} onClick={() => {\n                        if (this.state.testMode === true) {\n                            this.setState({ testIndex: this.state.testIndex - 1 })\n                            this.requestScanBarcodeWithImage(this.state.testIndex - 1)\n                        }\n                    }}>prev</Label>\n                    \n                    <Label basic size=\"tiny\" color={this.state.testMode ? \"red\" : \"grey\"} onClick={() => {\n                        if (this.state.testMode === true) {\n                            this.setState({ testIndex: this.state.testIndex + 1 })\n                            this.requestScanBarcodeWithImage(this.state.testIndex + 1)\n                        }\n                    }}>next</Label>\n\n                    <Label basic size=\"tiny\" color={this.state.testMode ? \"red\" : \"grey\"} onClick={() => {\n                        if (this.state.testMode === true) {\n                            this.autoTest(true)\n                            this.setState({autoTest:true})\n                        }\n                    }}>autotest</Label>\n\n\n                </div>\n\n            </div>\n\n        )\n    }\n\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}